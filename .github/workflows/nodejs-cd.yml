name: NodeJS Continuous Delivery

on:
  workflow_dispatch:
  #schedule:
  #  - cron: '*/5 * * * *'

jobs:
  determine_latest_rc:
    concurrency:
      group: acceptance_stage
    runs-on: ubuntu-latest
    outputs:
      LATEST_RC: ${{ steps.get-latest-rc.outputs.LATEST_RC }}
    steps:
    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20
    
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0

    - name: Determine Latest Release Candidate
      id: get-latest-rc
      run: |
        tags=$(git tag -l "rc-*" | grep "rc-*" | sort -V)
        latestRC=$(echo $tags | awk '{print $NF}')
        echo "Latest Release Candidate is $latestRC"
        echo "LATEST_RC=$latestRC" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
        exit 0

    # Check to see artifact rc-<latest rc>-binaries exists. If it doesn't then
    # that means we've already process it. Maybe we can just exit 0 and go back to sleep

  fetch_release_candidate:
    needs: determine_latest_rc
    concurrency:
      group: acceptance_stage
    runs-on: ubuntu-latest

    steps:
    - name: Fetch The Binaries For The RC    
      id: fetch-binaries
      run: |
        run_id=$(curl -s "https://api.github.com/repos/WoodyB/vending-machine-project/actions/artifacts?name=${{ needs.determine_latest_rc.outputs.LATEST_RC }}-binaries" | jq -r '.artifacts[0].workflow_run.id')
        echo "run_id is $run_id"
        echo "run_id=$run_id" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
    
    - name: Download Binaries Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.determine_latest_rc.outputs.LATEST_RC }}-binaries
        github-token: ${{ secrets.USER_TOKEN }}
        merge-multiple: false
        repository: WoodyB/vending-machine-project
        run-id: ${{ env.run_id }}
        
    - name: Display downloaded files
      run: ls

    - name: Print app-data.js
      run: cat ./bin/app-data.js

    - name: Run Acceptance Tests
      id: acceptance_tests
      run: |
        chmod a+x node_modules/.bin/jest
        npm run test:acceptance
      continue-on-error: true

    - name: Take Action On Acceptance Tests Passed
      if: steps.acceptance_tests.outcome == 'success'
      run: |
        echo "Acceptance Tests PASS"
        # Update the version in app-data.js by dropping the -RC
        sed -i "s/version: \"\([0-9]\+\.[0-9]\+\.[0-9]\+\)-RC\"/version: \"\1\"/g" ./bin/app-data.js
        cat ./bin/app-data.js

    # Upload the proper files ./bin ./node_modules as new artifact rc-<latest rc>-binaries-accepted
    - name: Upload Artifact As Accepted
      if: steps.acceptance_tests.outcome == 'success'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ needs.determine_latest_rc.outputs.LATEST_RC }}-binaries-accepted
        path: |
          ./bin
          ./node_modules

    # Delete artifact rc-<latest rc>-binaries
    - name: Get Artifact ID
      if: steps.acceptance_tests.outcome == 'success'    
      id: get_artifact_id
      run: |
        artifact_id=$(curl -s -X GET \
          -H "Authorization: Bearer ${{ secrets.USER_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | \
          jq -r '.artifacts[] | select(.name == "${{ needs.determine_latest_rc.outputs.LATEST_RC }}-binaries }}") | .id')
        echo ">>>>> $artifact_id <<<<<"  
        echo "ARTIFACT_ID=$artifact_id" >> $GITHUB_ENV
        echo env.ARTIFACT_ID

    - name: Delete Artifact
      if: steps.acceptance_tests.outcome == 'success'    
      run: |
        curl -X DELETE \
          -H "Authorization: Bearer ${{ secrets.USER_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ env.ARTIFACT_ID }}"    
    
    - name: Take Action On Acceptance Tests Failed
      if: steps.acceptance_tests.outcome != 'success'
      run: |
        echo "Acceptance Tests FAIL"
        # Upload the proper files ./bin ./node_modules as new artifact rc-<latest rc>-binaries-rejected
        # Delete artifact rc-<latest rc>-binaries
        exit 1
        
