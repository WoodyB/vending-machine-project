name: Create Release

on:
  workflow_dispatch:
    inputs:
      artifact_name:
        description: 'Artifact name'
        required: true

jobs:
  create_release:
    concurrency:
      group: create_release
    runs-on: ubuntu-latest
    steps:
    - name: Get Run ID Of Workflow That Created The RC Artifact  
      id: fetch-binaries
      run: |
        run_id=$(curl -s "https://api.github.com/repos/WoodyB/vending-machine-project/actions/artifacts?name=${{ inputs.artifact_name }}" | jq -r '.artifacts[0].workflow_run.id')
        echo "run_id of workflow that produced the artifact is $run_id"
        echo "run_id=$run_id" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
    
    - name: Download RC Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        github-token: ${{ secrets.USER_TOKEN }}
        merge-multiple: false
        repository: WoodyB/vending-machine-project
        run-id: ${{ env.run_id }}
        
    - name: Extract Version From Artifact
      run: |
        version=$(cat ./bin/app-data.js | grep 'version:' | sed -E 's/.*"([^"]+)".*/\1/')
        echo "Preparing version $version"
        echo "VERSION=$version" >> $GITHUB_ENV

    #- name: Create Compressed Release
    #  run: |
    #    tar -czvf VMP-Release-${{ env.VERSION }}.tar.gz ./bin ./node_modules

    #- name: Debug See what we got
    #  run: ls -lh *.gz

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v4
      with:
        name: VMP-Release-${{ env.VERSION }}
        path: |
          ./bin
          ./node_modules

      
    - name: Update Release Web Page
      run: echo 'TBD'
