name: Create Release Package

on:
  workflow_dispatch:
    inputs:
      artifact_name:
        description: 'Artifact name'
        required: true

jobs:
  create_release_package:
    runs-on: ubuntu-latest
    steps:
    - name: Get Run ID Of Workflow That Created The RC Artifact  
      id: fetch-binaries
      run: |
        run_id=$(curl -s "https://api.github.com/repos/WoodyB/vending-machine-project/actions/artifacts?name=${{ inputs.artifact_name }}" | jq -r '.artifacts[0].workflow_run.id')
        echo "run_id of workflow that produced the artifact is $run_id"
        echo "run_id=$run_id" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
    
    - name: Download RC Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        github-token: ${{ secrets.USER_TOKEN }}
        merge-multiple: false
        repository: WoodyB/vending-machine-project
        run-id: ${{ env.run_id }}
        
    - name: Extract Version From Artifact
      run: |
        version=$(cat ./bin/app-data.js | grep 'version:' | sed -E 's/.*"([^"]+)".*/\1/')
        echo "Preparing version $version"
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Create Compressed Package
      run: |
        tar -czvf VMP-Release-${{ env.VERSION }}.tar.gz ./bin ./node_modules

    - name: See what we got
      run: ls -lh *.gz

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Publish Compressed Package to GitHub Packages
      run: |
        npm publish VMP-Release-${{ env.VERSION }}.tar.gz --access public --tag Rel-${{ env.VERSION }} --package VMP-Release-${{ env.VERSION }}
      env:
        NODE_AUTH_TOKEN: ${{secrets.USER_TOKEN}}
