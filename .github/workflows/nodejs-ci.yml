name: NodeJS CI
on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build_and_test:

    concurrency:
      group: commit_stage
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Commit Stage Tests (linter)
      run: npm run lint

    - name: Commit Stage Tests (unit tests)
      run: npm run test:commit
      
    - name: Show GitHub context   
      env: 
        GITHUB_CONTEXT: ${{ toJson(github) }}   
      run: echo "$GITHUB_CONTEXT"
      shell: bash
      
    - name: Tell Git who we are
      run: |
        git config user.name "WoodyB"
      env:
        GITHUB_TOKEN: ${{ secrets.USER_TOKEN }}

    - name: Create Compressed Immutable Binary
      run: tar -czvf rc-binary.tar.gz node_modules bin
      # Adjust the directories as needed

    - name: Upload Compressed immutable Binary to GitHub Releases
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./rc-binary.tar.gz
        asset_name: rc-${{ github.run_number }}-binary.tar.gz
        asset_content_type: application/gzip
      
    - name: Tag Source Files for Release Candidate
      run: git tag -a "rc-${{ github.run_number }}" -m "Build tag for v${{ github.run_number }}"
      env:
        GITHUB_TOKEN: ${{ secrets.USER_TOKEN }}
        
    - name: Push Tags
      run: git push origin --tags
      env:
        GITHUB_TOKEN: ${{ secrets.USER_TOKEN }}
      

  merge_to_main:
    needs: build_and_test
    concurrency:
      group: commit_stage

    runs-on: ubuntu-latest

    steps:
    - name: Merge to main if tests pass 
      run: |
        GITHUB_TOKEN="${{ secrets.USER_TOKEN }}"
        API_URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/merge"
        curl -X PUT -H "Authorization: Bearer $GITHUB_TOKEN" "$API_URL"
        
    - name: Delete the branch after merge 
      run: |        
        GITHUB_TOKEN="${{ secrets.USER_TOKEN }}"
        DELETE_BRANCH_API_URL="https://api.github.com/repos/${{ github.repository }}/git/refs/heads/${{ github.head_ref }}"
        curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" "$DELETE_BRANCH_API_URL"
        
